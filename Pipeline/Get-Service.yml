- name: win_powershell
  vars:
    ServiceName: WinRM
    State: None
    StartType: None
  hosts: ws
  tasks:
    - name: Get service state
      win_shell: |
        $RegPath = "HKLM:\SOFTWARE\Microsoft\PowerShellCore\InstalledVersions\*"
        $PS7Ver = (Get-ItemProperty -Path $RegPath -ErrorAction Ignore).SemanticVersion
        if ($PS7Ver -ne $null) {
          Write-Host "PowerShell 7: True (version: $PS7Ver)"
        }
        else {
          Write-Host "PowerShell 7: False"
        }
        Get-Service *"{{ServiceName}}"* | Format-Table ServiceName,Status,StartType,DisplayName
        # pwsh -c 'Get-Service *"{{ServiceName}}"* | Format-Table ServiceName,Status,StartupType,DisplayName,BinaryPathName'
      register: command_output
    - name: Output
      debug:
        var: command_output.stdout_lines
    - name: Change service state
      win_shell: |
        if ("{{StartType}}" -match "Automatic|Disabled|Manual") {
          Get-Service *"{{ServiceName}}"* | Set-Service -StartType "{{StartType}}"
        }
        if ("{{StartType}}" -eq "AutomaticDelayedStart") {
          pwsh -c 'Get-Service *"{{ServiceName}}"* | Set-Service -StartType "{{StartType}}"'            
        }
        if ("{{State}}" -match "Start") {
          Get-Service *"{{ServiceName}}"* | Start-Service
        }
        elseif ("{{State}}" -match "Restart") {
          Get-Service *"{{ServiceName}}"* | Restart-Service
        }
        elseif ("{{State}}" -match "Stop") {
          Get-Service *"{{ServiceName}}"* | Stop-Service
        }
        else {
          Write-Host "No change in state"
        }
        if ( ("{{State}}" -notmatch "None") -or ("{{StartType}}" -notmatch "None") ) {    
          Get-Service *"{{ServiceName}}"* | Format-Table ServiceName,Status,StartType,DisplayName
        }
      register: command_output
    - name: Output
      debug:
        var: command_output.stdout_lines